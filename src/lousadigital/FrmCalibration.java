/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lousadigital;

import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.WindowConstants;
import lousadigital.core.DigitalBoard;

/**
 *
 * @author gabri
 */
public class FrmCalibration extends javax.swing.JFrame
{
    private final DigitalBoard digitalBoard;

    /**
     * Creates new form FrmCalibration
     *
     * @param digitalBoard Digital board for calibration
     */
    public FrmCalibration(DigitalBoard digitalBoard)
    {
        initComponents();
        
        this.digitalBoard = digitalBoard;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        pnlControls = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        sldHMin = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        sldHMax = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sldSMax = new javax.swing.JSlider();
        sldSMin = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        sldVMax = new javax.swing.JSlider();
        sldVMin = new javax.swing.JSlider();
        btnFinished = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanelHue1 = new lousadigital.components.JPanelHue();
        pnlSDisplayMin = new lousadigital.components.JPanelSaturation();
        pnlVDisplayMin = new lousadigital.components.JPanelValue();
        pnlSDisplayMax = new lousadigital.components.JPanelSaturation();
        pnlVDisplayMax = new lousadigital.components.JPanelValue();
        jPanelHue2 = new lousadigital.components.JPanelHue();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        spnCursorClickSize = new javax.swing.JSpinner();
        lblClickState = new javax.swing.JLabel();
        pnlGrid = new javax.swing.JPanel();
        pnlCameraView = new javax.swing.JPanel();
        pnlCalibrationView = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Hue Min:");

        sldHMin.setMaximum(360);
        sldHMin.setValue(0);
        sldHMin.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                sldHMinStateChanged(evt);
            }
        });

        jLabel2.setText("Hue Max:");

        sldHMax.setMaximum(360);
        sldHMax.setToolTipText("");
        sldHMax.setValue(0);
        sldHMax.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                sldHMaxStateChanged(evt);
            }
        });

        jLabel3.setText("Sat. Min:");

        jLabel4.setText("Sat. Max:");

        sldSMax.setMaximum(255);
        sldSMax.setValue(0);
        sldSMax.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                sldSMaxStateChanged(evt);
            }
        });

        sldSMin.setValue(0);
        sldSMin.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                sldSMinStateChanged(evt);
            }
        });

        jLabel5.setText("Val. Min:");

        jLabel6.setText("Val. Max:");

        sldVMax.setMaximum(255);
        sldVMax.setValue(0);
        sldVMax.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                sldVMaxStateChanged(evt);
            }
        });

        sldVMin.setToolTipText("");
        sldVMin.setValue(0);
        sldVMin.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                sldVMinStateChanged(evt);
            }
        });

        btnFinished.setText("Finished");
        btnFinished.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnFinishedActionPerformed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("<html><body><div style=\"text-align: center;\">Change the value until the<br>cursor click distance is optimal</div></body></html>");
        jLabel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 101), 2, true));

        jPanelHue1.setPreferredSize(new java.awt.Dimension(200, 10));

        javax.swing.GroupLayout jPanelHue1Layout = new javax.swing.GroupLayout(jPanelHue1);
        jPanelHue1.setLayout(jPanelHue1Layout);
        jPanelHue1Layout.setHorizontalGroup(
            jPanelHue1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelHue1Layout.setVerticalGroup(
            jPanelHue1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlSDisplayMinLayout = new javax.swing.GroupLayout(pnlSDisplayMin);
        pnlSDisplayMin.setLayout(pnlSDisplayMinLayout);
        pnlSDisplayMinLayout.setHorizontalGroup(
            pnlSDisplayMinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        pnlSDisplayMinLayout.setVerticalGroup(
            pnlSDisplayMinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlVDisplayMinLayout = new javax.swing.GroupLayout(pnlVDisplayMin);
        pnlVDisplayMin.setLayout(pnlVDisplayMinLayout);
        pnlVDisplayMinLayout.setHorizontalGroup(
            pnlVDisplayMinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        pnlVDisplayMinLayout.setVerticalGroup(
            pnlVDisplayMinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlSDisplayMaxLayout = new javax.swing.GroupLayout(pnlSDisplayMax);
        pnlSDisplayMax.setLayout(pnlSDisplayMaxLayout);
        pnlSDisplayMaxLayout.setHorizontalGroup(
            pnlSDisplayMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        pnlSDisplayMaxLayout.setVerticalGroup(
            pnlSDisplayMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlVDisplayMaxLayout = new javax.swing.GroupLayout(pnlVDisplayMax);
        pnlVDisplayMax.setLayout(pnlVDisplayMaxLayout);
        pnlVDisplayMaxLayout.setHorizontalGroup(
            pnlVDisplayMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        pnlVDisplayMaxLayout.setVerticalGroup(
            pnlVDisplayMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        jPanelHue2.setPreferredSize(new java.awt.Dimension(200, 10));

        javax.swing.GroupLayout jPanelHue2Layout = new javax.swing.GroupLayout(jPanelHue2);
        jPanelHue2.setLayout(jPanelHue2Layout);
        jPanelHue2Layout.setHorizontalGroup(
            jPanelHue2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelHue2Layout.setVerticalGroup(
            jPanelHue2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("<html><body><div style=\"text-align: center;\">Adjust the sliders until the bottom<br>pane shows only the object that you<br>want to use as the cursor</div></body></html>");
        jLabel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 101), 2, true));

        jLabel9.setText("Cursor click size:");

        spnCursorClickSize.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000, 1));

        lblClickState.setBackground(new java.awt.Color(255, 0, 0));
        lblClickState.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClickState.setText("Not Clicked");
        lblClickState.setOpaque(true);

        javax.swing.GroupLayout pnlControlsLayout = new javax.swing.GroupLayout(pnlControls);
        pnlControls.setLayout(pnlControlsLayout);
        pnlControlsLayout.setHorizontalGroup(
            pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblClickState, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7)
                    .addComponent(btnFinished, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlsLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sldHMin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelHue1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlsLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanelHue2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sldHMax, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlsLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sldSMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlsLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sldSMax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlsLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sldVMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlsLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sldVMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlSDisplayMin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlSDisplayMax, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlVDisplayMin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlVDisplayMax, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlControlsLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(spnCursorClickSize)))
                .addContainerGap())
            .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlControlsLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel8)
                    .addContainerGap()))
        );
        pnlControlsLayout.setVerticalGroup(
            pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlsLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jPanelHue1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sldHMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(sldHMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelHue2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(pnlSDisplayMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sldSMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(sldSMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSDisplayMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(pnlVDisplayMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sldVMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(sldVMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlVDisplayMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(spnCursorClickSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblClickState, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFinished)
                .addContainerGap())
            .addGroup(pnlControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlControlsLayout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(528, Short.MAX_VALUE)))
        );

        pnlGrid.setLayout(new java.awt.GridLayout(2, 1, 5, 5));

        pnlCameraView.setName(""); // NOI18N

        javax.swing.GroupLayout pnlCameraViewLayout = new javax.swing.GroupLayout(pnlCameraView);
        pnlCameraView.setLayout(pnlCameraViewLayout);
        pnlCameraViewLayout.setHorizontalGroup(
            pnlCameraViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 431, Short.MAX_VALUE)
        );
        pnlCameraViewLayout.setVerticalGroup(
            pnlCameraViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 302, Short.MAX_VALUE)
        );

        pnlGrid.add(pnlCameraView);

        pnlCalibrationView.setName(""); // NOI18N

        javax.swing.GroupLayout pnlCalibrationViewLayout = new javax.swing.GroupLayout(pnlCalibrationView);
        pnlCalibrationView.setLayout(pnlCalibrationViewLayout);
        pnlCalibrationViewLayout.setHorizontalGroup(
            pnlCalibrationViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 431, Short.MAX_VALUE)
        );
        pnlCalibrationViewLayout.setVerticalGroup(
            pnlCalibrationViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 302, Short.MAX_VALUE)
        );

        pnlGrid.add(pnlCalibrationView);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlGrid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlControls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlGrid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlControls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowOpened
    {//GEN-HEADEREND:event_formWindowOpened
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        
        digitalBoard.enterCalibrationMode();
        
        sldHMin.setValue(digitalBoard.getCursorCalibrator().getHMin());
        sldHMax.setValue(digitalBoard.getCursorCalibrator().getHMax());
        
        sldSMin.setValue(digitalBoard.getCursorCalibrator().getSMin());
        sldSMax.setValue(digitalBoard.getCursorCalibrator().getSMax());
        
        sldVMin.setValue(digitalBoard.getCursorCalibrator().getVMin());
        sldVMax.setValue(digitalBoard.getCursorCalibrator().getVMax());
        
        spnCursorClickSize.setValue(digitalBoard.getCursorCalibrator().getCursorClickedSize());
        
        this.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                digitalBoard.exitCalibrationMode();
                super.windowClosing(e);
            }
            
        });
        
        spnCursorClickSize.addChangeListener(e ->
        {
            digitalBoard.getCursorCalibrator().setCursorClickedSize((int) spnCursorClickSize.getValue());
        });
        
        digitalBoard.getCursorCalibrator().setPropertyChangedHandler((pName, val) ->
        {
            if ("cursorClicked".equals(pName))
            {
                boolean value = (boolean) val;
                if (value)
                {
                    lblClickState.setBackground(Color.GREEN);
                    lblClickState.setForeground(Color.BLACK);
                    lblClickState.setText("Clicked");
                }
                else
                {
                    lblClickState.setBackground(Color.RED);
                    lblClickState.setForeground(Color.WHITE);
                    lblClickState.setText("Not Clicked");
                }
            }
        });
        
        digitalBoard.start(
                pnlCameraView.getGraphics(),
                pnlCalibrationView.getGraphics(),
                pnlCameraView.getWidth(),
                pnlCameraView.getHeight(),
                pnlCalibrationView.getWidth(),
                pnlCalibrationView.getHeight(),
                30
        );
    }//GEN-LAST:event_formWindowOpened

    private void btnFinishedActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnFinishedActionPerformed
    {//GEN-HEADEREND:event_btnFinishedActionPerformed
        digitalBoard.exitCalibrationMode();
        
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_btnFinishedActionPerformed

    private void sldHMinStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sldHMinStateChanged
    {//GEN-HEADEREND:event_sldHMinStateChanged
        if (sldHMin.getValueIsAdjusting())
        {
            return;
        }
        int hue = sldHMin.getValue();
        
        digitalBoard.getCursorCalibrator().setHMin(hue / 2);
        pnlSDisplayMin.setHue(hue);
        pnlVDisplayMin.setHue(hue);
    }//GEN-LAST:event_sldHMinStateChanged

    private void sldHMaxStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sldHMaxStateChanged
    {//GEN-HEADEREND:event_sldHMaxStateChanged
        if (sldHMax.getValueIsAdjusting())
        {
            return;
        }
        int hue = sldHMax.getValue();
        
        digitalBoard.getCursorCalibrator().setHMax(hue / 2);
        pnlSDisplayMax.setHue(hue);
        pnlVDisplayMax.setHue(hue);
    }//GEN-LAST:event_sldHMaxStateChanged

    private void sldSMinStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sldSMinStateChanged
    {//GEN-HEADEREND:event_sldSMinStateChanged
        if (sldSMin.getValueIsAdjusting())
        {
            return;
        }
        digitalBoard.getCursorCalibrator().setSMin(sldSMin.getValue());
    }//GEN-LAST:event_sldSMinStateChanged

    private void sldSMaxStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sldSMaxStateChanged
    {//GEN-HEADEREND:event_sldSMaxStateChanged
        if (sldSMax.getValueIsAdjusting())
        {
            return;
        }
        digitalBoard.getCursorCalibrator().setSMax(sldSMax.getValue());
    }//GEN-LAST:event_sldSMaxStateChanged

    private void sldVMinStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sldVMinStateChanged
    {//GEN-HEADEREND:event_sldVMinStateChanged
        if (sldVMin.getValueIsAdjusting())
        {
            return;
        }
        digitalBoard.getCursorCalibrator().setVMin(sldVMin.getValue());
    }//GEN-LAST:event_sldVMinStateChanged

    private void sldVMaxStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_sldVMaxStateChanged
    {//GEN-HEADEREND:event_sldVMaxStateChanged
        if (sldVMax.getValueIsAdjusting())
        {
            return;
        }
        digitalBoard.getCursorCalibrator().setVMax(sldVMax.getValue());
    }//GEN-LAST:event_sldVMaxStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinished;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private lousadigital.components.JPanelHue jPanelHue1;
    private lousadigital.components.JPanelHue jPanelHue2;
    private javax.swing.JLabel lblClickState;
    private javax.swing.JPanel pnlCalibrationView;
    private javax.swing.JPanel pnlCameraView;
    private javax.swing.JPanel pnlControls;
    private javax.swing.JPanel pnlGrid;
    private lousadigital.components.JPanelSaturation pnlSDisplayMax;
    private lousadigital.components.JPanelSaturation pnlSDisplayMin;
    private lousadigital.components.JPanelValue pnlVDisplayMax;
    private lousadigital.components.JPanelValue pnlVDisplayMin;
    private javax.swing.JSlider sldHMax;
    private javax.swing.JSlider sldHMin;
    private javax.swing.JSlider sldSMax;
    private javax.swing.JSlider sldSMin;
    private javax.swing.JSlider sldVMax;
    private javax.swing.JSlider sldVMin;
    private javax.swing.JSpinner spnCursorClickSize;
    // End of variables declaration//GEN-END:variables

}
